name: Reusable WF - Output Workflow Summary

on:
  workflow_call:
    inputs:
      payload:
        type: string
        required: true
      build-type:
        type: string
        required: true

defaults:
  run:
    shell: bash

jobs:

  output-summary:
    runs-on: ubuntu-latest
    steps:

      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Download Artifacts
        uses: actions/download-artifact@v3
        with:
          path: ./tmp

      - name: Clean up dir
        run: |
          mkdir -p dist
          mkdir -p amlg
          find ./tmp -type f -name '*.whl' -exec mv -t ./amlg {} +

      - name: Generate workflow summary
        env:
          GH_TOKEN: ${{ secrets.HOWSOAI_WORKFLOW_AUTOMATION_CLASSIC_TOKEN }}
        run: |
          pip install --user amlg/*-py3-none-any.whl

          site_packages=$(python -m site --user-site)

          # Get version, commit SHA, and workflow/release URL
          amlg_version=$(jq -r '.version.amalgam' $site_packages/amalgam/lib/version.json)
          amlg_sha=$(jq -r '.version."amalgam_sha"' $site_packages/amalgam/lib/version.json)
          amlg_url=$(jq -r '.version."amalgam_url"' $site_packages/amalgam/lib/version.json)

          if [[ $(cat $site_packages/amalgam/lib/version.json | jq '.version | has("amalgam_build_date")') == true ]]; then
            # Get amalgam prerelease info (workflow run)
            build_date=$(jq -r '.version."amalgam_build_date"' $site_packages/amalgam/lib/version.json)
            build_date=$(python -c "from datetime import datetime; print(datetime.strptime('$build_date', '%Y-%m-%dT%H:%M:%SZ').strftime('%A, %B %d, %I:%M %p'))")
            amlg_notes=$(jq -r '.version."amalgam_display_title"' $site_packages/amalgam/lib/version.json)
            amlg_notes=$(python -c "notes = '$amlg_notes'.split(' -')[0] if 'PR Build' in '$amlg_notes' else '$amlg_notes'; print(notes)")
            amlg_version=$(echo "$amlg_version ($build_date)")
          else
            # Get amalgam release info
            amlg_notes=$(echo "Release version specified in \`version.json\`")
          fi
          # Substitute info into version_summary.md
          sed -i "s|{amalgam-version}|$amlg_version|g" ./.github/templates/version_summary.md
          sed -i "s|{amalgam-notes}|$amlg_notes|g" ./.github/templates/version_summary.md
          sed -i "s|{amalgam-sha}|$amlg_sha|g" ./.github/templates/version_summary.md
          sed -i "s|{amalgam-url}|$amlg_url|g" ./.github/templates/version_summary.md
          # Remove unecessary quotations from variable substitutions
          sed -i "s|\"||g" ./.github/templates/version_summary.md
          # Output filled template file to workflow summary
          cat ./.github/templates/version_summary.md >> $GITHUB_STEP_SUMMARY